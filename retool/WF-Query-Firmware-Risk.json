{"name":"WF-Query-Firmware-Risks","description":null,"organizationId":1,"isEnabled":false,"crontab":null,"timezone":"Europe/Zurich","blockData":[{"top":-32,"left":-464,"uuid":"c902b93e-20fd-422c-8707-770bc29fddcc","options":{},"pluginId":"startTrigger","blockType":"webhook","dimensions":{"width":400,"height":242},"editorType":"JavascriptQuery","onboarding":false,"environment":"production","isMinimized":false,"resourceName":"webhook","incomingOnSuccessEdges":[]},{"top":-32,"left":96,"uuid":"e60134ee-1cda-4568-8e66-1c6aa704cfb5","pluginId":"AIQuery","blockType":"default","editorType":"RetoolAIQuery","onboarding":false,"environment":"production","isMinimized":false,"resourceName":"retool_ai","responsePanelState":"open","incomingOnSuccessEdges":["c902b93e-20fd-422c-8707-770bc29fddcc"]},{"top":-48,"left":1248,"uuid":"589d8020-236b-4d32-ae90-e4ba3f526b96","options":{"body":"code1.data","status":"200"},"pluginId":"webhookReturn1","blockType":"webhookReturn","editorType":"JavascriptQuery","onboarding":false,"environment":"production","isMinimized":false,"resourceName":"JavascriptQuery","responsePanelState":"open","incomingOnSuccessEdges":["903ad98c-6b9c-4667-bc60-c047ed0c30ca"]},{"top":-16,"left":704,"uuid":"903ad98c-6b9c-4667-bc60-c047ed0c30ca","pluginId":"code1","blockType":"code","dimensions":{"width":320,"height":288},"editorType":"JavascriptQuery","environment":"production","isMinimized":false,"resourceName":"JavascriptQuery","responsePanelState":"open","incomingOnSuccessEdges":["e60134ee-1cda-4568-8e66-1c6aa704cfb5"]}],"templateData":"[\"~#iR\",[\"^ \",\"n\",\"appTemplate\",\"v\",[\"^ \",\"isFetching\",false,\"plugins\",[\"~#iOM\",[\"startTrigger\",[\"^0\",[\"^ \",\"n\",\"pluginTemplate\",\"v\",[\"^ \",\"id\",\"startTrigger\",\"uuid\",null,\"type\",\"datasource\",\"subtype\",\"JavascriptQuery\",\"namespace\",null,\"resourceName\",\"JavascriptQuery\",\"resourceDisplayName\",null,\"template\",[\"^3\",[\"queryRefreshTime\",\"\",\"allowedGroupIds\",[\"~#iL\",[]],\"streamResponse\",false,\"lastReceivedFromResourceAt\",null,\"queryDisabledMessage\",\"\",\"servedFromCache\",false,\"offlineUserQueryInputs\",\"\",\"successMessage\",\"\",\"queryDisabled\",\"\",\"playgroundQuerySaveId\",\"latest\",\"workflowParams\",null,\"resourceNameOverride\",\"\",\"runWhenModelUpdates\",false,\"workflowRunId\",null,\"showFailureToaster\",true,\"query\",\"return {\\\"cve\\\":\\\"CVE-2024-53104\\\"}\",\"playgroundQueryUuid\",\"\",\"playgroundQueryId\",null,\"error\",null,\"workflowRunBodyType\",\"raw\",\"privateParams\",[\"^;\",[]],\"workflowBlockUuid\",null,\"queryRunOnSelectorUpdate\",false,\"runWhenPageLoadsDelay\",\"\",\"data\",null,\"importedQueryInputs\",[\"^3\",[]],\"_additionalScope\",[\"^;\",[]],\"isImported\",false,\"showSuccessToaster\",true,\"cacheKeyTtl\",\"\",\"requestSentTimestamp\",null,\"metadata\",null,\"workflowActionType\",null,\"queryRunTime\",null,\"changesetObject\",\"\",\"errorTransformer\",\"// The variable 'data' allows you to reference the request's data in the transformer. \\n// example: return data.find(element => element.isError)\\nreturn data.error\",\"finished\",null,\"confirmationMessage\",null,\"isFetching\",false,\"changeset\",\"\",\"rawData\",null,\"queryTriggerDelay\",\"0\",\"resourceTypeOverride\",null,\"watchedParams\",[\"^;\",[]],\"enableErrorTransformer\",false,\"showLatestVersionUpdatedWarning\",false,\"timestamp\",0,\"evalType\",\"script\",\"importedQueryDefaults\",[\"^3\",[]],\"enableTransformer\",false,\"showUpdateSetValueDynamicallyToggle\",true,\"overrideOrgCacheForUserCache\",false,\"runWhenPageLoads\",false,\"transformer\",\"// Query results are available as the `data` variable\\nreturn data\",\"events\",[\"^;\",[]],\"queryTimeout\",\"10000\",\"workflowId\",null,\"requireConfirmation\",false,\"queryFailureConditions\",\"\",\"changesetIsObject\",false,\"enableCaching\",false,\"allowedGroups\",[\"^;\",[]],\"offlineQueryType\",\"None\",\"queryThrottleTime\",\"750\",\"updateSetValueDynamically\",false,\"notificationDuration\",\"\"]],\"style\",null,\"position2\",null,\"mobilePosition2\",null,\"mobileAppPosition\",null,\"tabIndex\",null,\"container\",\"\",\"createdAt\",\"~m1717402445682\",\"updatedAt\",\"~m1740387664366\",\"folder\",\"\",\"screen\",null]]],\"AIQuery\",[\"^0\",[\"^ \",\"n\",\"pluginTemplate\",\"v\",[\"^ \",\"id\",\"AIQuery\",\"^4\",null,\"^5\",\"datasource\",\"^6\",\"RetoolAIQuery\",\"^7\",null,\"^8\",\"retool_ai\",\"^9\",null,\"^:\",[\"^3\",[\"vectorNamespaceIds\",[\"^;\",[\"99419e53-9957-4240-bcd5-fe27f5b5c1e6\"]],\"vectorDynamicUrls\",\"\",\"queryRefreshTime\",\"\",\"allowedGroupIds\",[\"^;\",[]],\"vectorActionNamespaceDynamicModeEnabled\",false,\"vectorCreateAndFetchDynamicModeEnabled\",false,\"streamResponse\",true,\"imageClassifierDynamicLabels\",\"\",\"lastReceivedFromResourceAt\",null,\"vectorSemanticSearchString\",\"\",\"queryDisabledMessage\",\"\",\"customTemperature\",\"0.1\",\"servedFromCache\",false,\"offlineUserQueryInputs\",\"\",\"successMessage\",\"\",\"queryDisabled\",\"\",\"playgroundQuerySaveId\",\"latest\",\"workflowParams\",null,\"resourceNameOverride\",\"\",\"runWhenModelUpdates\",false,\"workflowRunId\",null,\"showFailureToaster\",true,\"vectorUrls\",[\"^;\",[]],\"customSystemMessage\",\"You are an advanced vulnerability researcher. I will provide you a cve and additional context you will create me an appropriate threat model I with an attack tree with most plausible scenarios \\n\\nYou will structure your response in the following format and output new lines appropriately. Be precise and provide the best investigation guidance but whilst being straight to the point with your advise. \\n\\n### Attack Tree \\nMost Plausible Scenarios \\n\\n# Analysis \\n\\nDREAD Threat Model  \\n\\n\\n### Investigation of {{startTrigger.data.cve}}\\nexplain what is {{startTrigger.data.cve}} \\n\\n\",\"textExtractorDynamicLabels\",\"\",\"imageExtractorLabels\",[\"^;\",[]],\"query\",\"\",\"playgroundQueryUuid\",\"\",\"imageExtractorDynamicModeEnabled\",false,\"playgroundQueryId\",null,\"error\",null,\"workflowRunBodyType\",\"raw\",\"privateParams\",[\"^;\",[]],\"workflowBlockUuid\",null,\"model\",\"gpt-4o-mini\",\"queryRunOnSelectorUpdate\",false,\"runWhenPageLoadsDelay\",\"\",\"data\",null,\"dynamicModelNameEnabled\",false,\"textClassifierLabels\",[\"^;\",[]],\"textClassifierDynamicModeEnabled\",false,\"importedQueryInputs\",[\"^3\",[]],\"instruction\",\"\\n\\nContext: {{startTrigger.data.cve}}\\n\",\"isImported\",false,\"imageModel\",\"dall-e-3\",\"showSuccessToaster\",true,\"fileUseDynamicSource\",false,\"cacheKeyTtl\",\"\",\"requestSentTimestamp\",null,\"metadata\",null,\"workflowActionType\",null,\"textClassifierDynamicLabels\",\"\",\"queryRunTime\",null,\"changesetObject\",\"\",\"errorTransformer\",\"// The variable 'data' allows you to reference the request's data in the transformer. \\n// example: return data.find(element => element.isError)\\nreturn data.error\",\"finished\",null,\"confirmationMessage\",null,\"isFetching\",false,\"changeset\",\"\",\"chatInput\",\"\",\"rawData\",null,\"vectorNamespaceId\",\"\",\"queryTriggerDelay\",\"0\",\"resourceTypeOverride\",null,\"watchedParams\",[\"^;\",[]],\"vectorDynamicNamespaces\",\"\",\"enableErrorTransformer\",false,\"imageExtractorDynamicLabels\",\"\",\"multimodalModel\",\"gpt-4o\",\"showLatestVersionUpdatedWarning\",false,\"vectorActionDynamicNamespace\",\"\",\"dynamicModelName\",\"gpt-4o-mini\",\"timestamp\",0,\"evalType\",\"script\",\"textExtractorDynamicModeEnabled\",false,\"action\",\"textGeneration\",\"textExtractorLabels\",[\"^;\",[]],\"importedQueryDefaults\",[\"^3\",[]],\"enableTransformer\",false,\"showUpdateSetValueDynamicallyToggle\",true,\"fileSource\",\"\",\"systemMessage\",\"You are a helpful assistant\",\"overrideOrgCacheForUserCache\",false,\"runWhenPageLoads\",false,\"content\",\"\",\"transformer\",\"// Query results are available as the `data` variable\\nreturn data\",\"events\",[\"^;\",[]],\"vectorAction\",\"upsertDocument\",\"queryTimeout\",\"120000\",\"workflowId\",null,\"vectorNamespacesDynamicModeEnabled\",false,\"requireConfirmation\",false,\"queryFailureConditions\",\"\",\"source\",\"\",\"imageClassifierLabels\",[\"^;\",[]],\"imageClassifierDynamicModeEnabled\",false,\"changesetIsObject\",false,\"dynamicModelProvider\",\"openAI\",\"vectorModeEnabled\",true,\"enableCaching\",false,\"allowedGroups\",[\"^;\",[]],\"chatHistory\",\"\",\"imageContent\",\"\",\"offlineQueryType\",\"None\",\"queryThrottleTime\",\"750\",\"updateSetValueDynamically\",false,\"notificationDuration\",\"\"]],\"^<\",null,\"^=\",null,\"^>\",null,\"^?\",null,\"^@\",null,\"^A\",\"\",\"^B\",\"~m1717402537820\",\"^C\",\"~m1740398094211\",\"^D\",\"\",\"^E\",null]]],\"webhookReturn1\",[\"^0\",[\"^ \",\"n\",\"pluginTemplate\",\"v\",[\"^ \",\"id\",\"webhookReturn1\",\"^4\",null,\"^5\",\"datasource\",\"^6\",\"JavascriptQuery\",\"^7\",null,\"^8\",\"JavascriptQuery\",\"^9\",null,\"^:\",[\"^3\",[\"queryRefreshTime\",\"\",\"allowedGroupIds\",[\"^;\",[]],\"streamResponse\",false,\"lastReceivedFromResourceAt\",null,\"queryDisabledMessage\",\"\",\"servedFromCache\",false,\"offlineUserQueryInputs\",\"\",\"successMessage\",\"\",\"queryDisabled\",\"\",\"playgroundQuerySaveId\",\"latest\",\"workflowParams\",null,\"resourceNameOverride\",\"\",\"runWhenModelUpdates\",false,\"workflowRunId\",null,\"showFailureToaster\",true,\"query\",\"const generateReturn = () => {\\n    const status = () => {\\n      try {\\n        return 200\\n      } catch {\\n        return 200\\n      }\\n    }\\n  const body = () => {\\n    try {\\n      return code1.data\\n    } catch {\\n      return {'error': true, 'messsage': 'there was a problem parsing the JSON body of webhookReturn1'}\\n    }\\n  }\\n  return {status: status(), body: body() }\\n  }\\n  return generateReturn()\\n  \",\"playgroundQueryUuid\",\"\",\"playgroundQueryId\",null,\"error\",null,\"workflowRunBodyType\",\"raw\",\"privateParams\",[\"^;\",[]],\"workflowBlockUuid\",null,\"queryRunOnSelectorUpdate\",false,\"runWhenPageLoadsDelay\",\"\",\"data\",null,\"importedQueryInputs\",[\"^3\",[]],\"_additionalScope\",[\"^;\",[]],\"isImported\",false,\"showSuccessToaster\",true,\"cacheKeyTtl\",\"\",\"requestSentTimestamp\",null,\"metadata\",null,\"workflowActionType\",null,\"editorMode\",\"sql\",\"queryRunTime\",null,\"changesetObject\",\"\",\"errorTransformer\",\"// The variable 'data' allows you to reference the request's data in the transformer. \\n// example: return data.find(element => element.isError)\\nreturn data.error\",\"finished\",null,\"confirmationMessage\",null,\"isFetching\",false,\"changeset\",\"\",\"rawData\",null,\"queryTriggerDelay\",\"0\",\"resourceTypeOverride\",null,\"watchedParams\",[\"^;\",[]],\"enableErrorTransformer\",false,\"showLatestVersionUpdatedWarning\",false,\"timestamp\",0,\"evalType\",\"script\",\"importedQueryDefaults\",[\"^3\",[]],\"enableTransformer\",false,\"showUpdateSetValueDynamicallyToggle\",true,\"overrideOrgCacheForUserCache\",false,\"runWhenPageLoads\",false,\"transformer\",\"// Query results are available as the `data` variable\\nreturn data\",\"events\",[\"^;\",[]],\"queryTimeout\",\"10000\",\"workflowId\",null,\"requireConfirmation\",false,\"queryFailureConditions\",\"\",\"changesetIsObject\",false,\"enableCaching\",false,\"allowedGroups\",[\"^;\",[]],\"offlineQueryType\",\"None\",\"queryThrottleTime\",\"750\",\"updateSetValueDynamically\",false,\"notificationDuration\",\"\"]],\"^<\",null,\"^=\",null,\"^>\",null,\"^?\",null,\"^@\",null,\"^A\",\"\",\"^B\",\"~m1717402539084\",\"^C\",\"~m1717408170383\",\"^D\",\"\",\"^E\",null]]],\"code1\",[\"^0\",[\"^ \",\"n\",\"pluginTemplate\",\"v\",[\"^ \",\"id\",\"code1\",\"^4\",null,\"^5\",\"datasource\",\"^6\",\"JavascriptQuery\",\"^7\",null,\"^8\",\"JavascriptQuery\",\"^9\",null,\"^:\",[\"^3\",[\"queryRefreshTime\",\"\",\"allowedGroupIds\",[\"^;\",[]],\"streamResponse\",false,\"lastReceivedFromResourceAt\",null,\"queryDisabledMessage\",\"\",\"servedFromCache\",false,\"offlineUserQueryInputs\",\"\",\"successMessage\",\"\",\"queryDisabled\",\"\",\"playgroundQuerySaveId\",\"latest\",\"workflowParams\",null,\"resourceNameOverride\",\"\",\"runWhenModelUpdates\",false,\"workflowRunId\",null,\"showFailureToaster\",true,\"query\",\"\\nconst normalizeAIQueryData = () => {\\n    const input = AIQuery.data;\\n    // Normalize the input data here\\n    return input;\\n};\\n\\nreturn normalizeAIQueryData();\\n\\n\",\"playgroundQueryUuid\",\"\",\"playgroundQueryId\",null,\"error\",null,\"workflowRunBodyType\",\"raw\",\"privateParams\",[\"^;\",[]],\"workflowBlockUuid\",null,\"queryRunOnSelectorUpdate\",false,\"runWhenPageLoadsDelay\",\"\",\"data\",null,\"importedQueryInputs\",[\"^3\",[]],\"_additionalScope\",[\"^;\",[]],\"isImported\",false,\"showSuccessToaster\",true,\"cacheKeyTtl\",\"\",\"requestSentTimestamp\",null,\"metadata\",null,\"workflowActionType\",null,\"queryRunTime\",null,\"changesetObject\",\"\",\"errorTransformer\",\"// The variable 'data' allows you to reference the request's data in the transformer. \\n// example: return data.find(element => element.isError)\\nreturn data.error\",\"finished\",null,\"confirmationMessage\",null,\"isFetching\",false,\"changeset\",\"\",\"rawData\",null,\"queryTriggerDelay\",\"0\",\"resourceTypeOverride\",null,\"watchedParams\",[\"^;\",[]],\"enableErrorTransformer\",false,\"showLatestVersionUpdatedWarning\",false,\"timestamp\",0,\"evalType\",\"script\",\"importedQueryDefaults\",[\"^3\",[]],\"enableTransformer\",false,\"showUpdateSetValueDynamicallyToggle\",true,\"overrideOrgCacheForUserCache\",false,\"runWhenPageLoads\",false,\"transformer\",\"// Query results are available as the `data` variable\\nreturn data\",\"events\",[\"^;\",[]],\"queryTimeout\",\"10000\",\"workflowId\",null,\"requireConfirmation\",false,\"queryFailureConditions\",\"\",\"changesetIsObject\",false,\"enableCaching\",false,\"allowedGroups\",[\"^;\",[]],\"offlineQueryType\",\"None\",\"queryThrottleTime\",\"750\",\"updateSetValueDynamically\",false,\"notificationDuration\",\"\"]],\"^<\",null,\"^=\",null,\"^>\",null,\"^?\",null,\"^@\",null,\"^A\",\"\",\"^B\",\"~m1717408051801\",\"^C\",\"~m1721918232328\",\"^D\",\"\",\"^E\",null]]]]],\"^B\",null,\"version\",\"3.75.18\",\"appThemeId\",null,\"appThemeName\",null,\"appThemeModeId\",null,\"appMaxWidth\",\"100%\",\"preloadedAppJavaScript\",null,\"preloadedAppJSLinks\",[],\"testEntities\",[],\"tests\",[],\"appStyles\",\"\",\"responsiveLayoutDisabled\",false,\"loadingIndicatorsDisabled\",false,\"urlFragmentDefinitions\",[\"^;\",[]],\"pageLoadValueOverrides\",[\"^;\",[]],\"customDocumentTitle\",\"\",\"customDocumentTitleEnabled\",false,\"customShortcuts\",[],\"isGlobalWidget\",false,\"isMobileApp\",false,\"isFormApp\",false,\"shortlink\",null,\"multiScreenMobileApp\",false,\"mobileAppSettings\",[\"^ \",\"mobileOfflineModeEnabled\",false,\"mobileOfflineModeDelaySync\",false,\"mobileOfflineModeBannerMode\",\"default\",\"displaySetting\",[\"^ \",\"landscapeMode\",false,\"tabletMode\",false]],\"formAppSettings\",[\"^ \",\"customRedirectUrl\",\"\"],\"notificationsSettings\",[\"^ \",\"globalQueryShowFailureToast\",true,\"globalQueryShowSuccessToast\",false,\"globalQueryToastDuration\",4.5,\"globalToastPosition\",\"bottomRight\"],\"folders\",[\"^;\",[]],\"pageCodeFolders\",[\"^ \"],\"queryStatusVisibility\",false,\"markdownLinkBehavior\",\"auto\",\"inAppRetoolPillAppearance\",\"NO_OVERRIDE\",\"rootScreen\",null,\"instrumentationEnabled\",false,\"experimentalFeatures\",[\"^ \",\"sourceControlTemplateDehydration\",false,\"multiplayerEditingEnabled\",false,\"disableMultiplayerEditing\",false],\"experimentalDataTabEnabled\",false,\"customComponentCollections\",[],\"savePlatform\",\"web\",\"internationalizationSettings\",[\"^ \",\"internationalizationEnabled\",false,\"internationalizationFiles\",[]],\"appTesting\",null]]]","triggerWebhooks":[{"name":"startTrigger","uuid":"startTrigger","inputSchema":{"properties":[]},"useHeaderApiKey":false,"exampleInputJSON":"{\"cve\":\"CVE-2024-53104\"}"}],"customLibraries":[{"version":"4.17.21","language":"javascript","variable":"_","codeString":"/* Edit library variable below */\n\nconst _ = require('lodash')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n","libraryName":"lodash"},{"version":"2.1.0","language":"javascript","variable":"numbro","codeString":"/* Edit library variable below */\n\nconst numbro = require('numbro')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n","libraryName":"numbro"},{"version":"5.3.2","language":"javascript","variable":"Papa","codeString":"/* Edit library variable below */\n\nconst Papa = require('papaparse')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n","libraryName":"papaparse"},{"version":"0.5.23","language":"javascript","variable":"moment","codeString":"/* Edit library variable below */\n\nconst moment = require('moment-timezone')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n","libraryName":"moment-timezone"},{"version":"3.4.0","language":"javascript","variable":"uuid","codeString":"/* Edit library variable below */\n\nconst uuid = require('uuid')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n","libraryName":"uuid"}],"createdBy":2,"protected":false,"setupScripts":{"python":{"codeString":""},"javascript":{"codeString":"// lodash\n/* Edit library variable below */\n\nconst _ = require('lodash')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n\n// numbro\n/* Edit library variable below */\n\nconst numbro = require('numbro')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n\n// papaparse\n/* Edit library variable below */\n\nconst Papa = require('papaparse')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n\n// moment-timezone\n/* Edit library variable below */\n\nconst moment = require('moment-timezone')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n\n// uuid\n/* Edit library variable below */\n\nconst uuid = require('uuid')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n"}},"subflows":[]}
